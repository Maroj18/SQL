# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


# What artist has the longest song?
SELECT artist_name, MAX(duration_ms)
FROM Spotifydata
LIMIT 1;

# Which artist is most popular with a tempo greater than 150?
SELECT artist_name, MAX(popularity)
FROM Spotifydata
HAVING tempo > 150
LIMIT 1;

# What is the average danceability by artist and track?
SELECT artist_name, track_name, AVG(danceability)
FROM Spotifydata
GROUP BY artist_name;
SELECT artist_name, track_name, AVG(danceability)
FROM Spotifydata
GROUP BY track_name;

# I determined who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
FROM Spotifydata
ORDER BY popularity desc 
LIMIT 10

# Then I determined who the top 5 aritists are by loudness and duration.
SELECT artist_name, loudness, duration_ms
FROM Spotifydata
ORDER BY loudness desc
LIMIT 5
SELECT artist_name, loudness, duration_ms
FROM Spotifydata
ORDER BY duration_ms desc
LIMIT 5

